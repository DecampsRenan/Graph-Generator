
// Algo Dijkstra
var Dijkstra = function(source, sommet, distance, graphe) {

	// Structure de donn√©es contenant les meilleurs chemins
	this.path = {
		source: source,
		sommets: sommet,
		distance: distance
	};
	
	var sourceCourante = source;
	var obj = graphe;
	var sommetsRestants = sommet;
	
	if (this.path.distance[0] < 1000000) {
		for(var i = 0; i < this.path.sommets.length; i++) {
			sourceCourante = sommetsRestants[i];
		
			for (var j = 0; j < obj.edges.length; j++) {
				
				if (parseInt(obj.edges[j].data.source,10) === sourceCourante) {
					var destination = parseInt(obj.edges[j].data.target)-2;
					var poids = parseInt(obj.edges[j].data.weight,10) + this.path.distance[sourceCourante-2];
					if 	( (this.path.distance[destination] > poids) ) {
						this.path.distance[destination] = poids;
					}
				}
				else if (parseInt(obj.edges[j].data.target,10) === sourceCourante) {
				
					var destination = parseInt(obj.edges[j].data.source)-2;
					var poids = parseInt(obj.edges[j].data.weight,10) + this.path.distance[sourceCourante-2];
					if 	( (this.path.distance[destination] > poids) ) {
						this.path.distance[destination] = poids;
					}
				}
			}
		}
	}	
	else {
		for(var i = this.path.sommets.length-1; i >= 0; i--) {
			sourceCourante = sommetsRestants[i];
	
			for (var j = 0; j < obj.edges.length; j++) {
			
				if (parseInt(obj.edges[j].data.source,10) === sourceCourante) {
					var destination = parseInt(obj.edges[j].data.target)-2;
					var poids = parseInt(obj.edges[j].data.weight,10) + this.path.distance[sourceCourante-2];
					if 	( (this.path.distance[destination] > poids) ) {
						this.path.distance[destination] = poids;
					}
				}
				else if (parseInt(obj.edges[j].data.target,10) === sourceCourante) {
				
					var destination = parseInt(obj.edges[j].data.source)-2;
					var poids = parseInt(obj.edges[j].data.weight,10) + this.path.distance[sourceCourante-2];
					if 	( (this.path.distance[destination] > poids) ) {
						this.path.distance[destination] = poids;
					}
				}
			}
		}
	}
	
};

module.exports = Dijkstra;