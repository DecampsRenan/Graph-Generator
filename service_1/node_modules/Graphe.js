// Classe générant un graphe
var Graph = require('graph').Graph;

/**
 * Classe générant un objet graphe à partir
 * du fichier passé en paramètre.
 **/
var Graphe = function(nbSommets, densite) {

	this.g = new Graph();

	var MAX_EDGES_PER_NODE = nbSommets - 1,
		MIN_EDGES          = nbSommets - 1;

	// Création des noeuds
	for(var i = 0; i < nbSommets; i++) {

		

	}
};

Graphe.prototype = {

	toString: function() {
		return this.g.toString();
	},

	toJSON: function() {
		return {
			nodes: [
				{ data: { id: 'a' } },
				{ data: { id: 'b' } },
				{ data: { id: 'c' } },
				{ data: { id: 'd' } },
				{ data: { id: 'e' } }
			],

			edges: [
				{ data: { id: 'ae', weight: 1, source: 'a', target: 'e' } },
				{ data: { id: 'ab', weight: 3, source: 'a', target: 'b' } },
				{ data: { id: 'be', weight: 4, source: 'b', target: 'e' } },
				{ data: { id: 'bc', weight: 5, source: 'b', target: 'c' } },
				{ data: { id: 'ce', weight: 6, source: 'c', target: 'e' } },
				{ data: { id: 'cd', weight: 2, source: 'c', target: 'd' } },
				{ data: { id: 'de', weight: 7, source: 'd', target: 'e' } }
			]
		};
	},

	// Creates edge (a, b) with weight
	set: function(a, b, weight) {
		return this.g.set(a, b, weight);
	},

	// Removes edge (a, b)
	del: function(a, b) {
		return this.g.del(a, b);
	},

	get: function(a, b) {
		return this.g.get(a, b);
	}
};

module.exports = Graphe;
