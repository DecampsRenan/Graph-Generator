// Classe utilitaire pour les graphes
var Graph = require('graph').Graph;

/**
 * Classe générant un objet graphe à partir
 * du fichier passé en paramètre.
 **/
var Graphe = function(nbNodes, density) {

	// Structure de données contenant l'arbre
	this.g = {
		nodes : [
		],
		edges : [
		],
		density: density
	};

	/*
		* stackoverflow.com/questions/2041517/random-simple-connected-graph-generation-with-given-sparseness *
		For each node you need at least one edge.

		Start with one node. In each iteration, create a new node and a new
		edge. The edge is to connect the new node with a random node
		from the previous node set.

		After all nodes are created, create random edges until S is fulfilled.
		Make sure not to create double edges (for this you can use an
		adjacency matrix).

		Random graph is done in O(S).
	*/
	var nbNodesRestants = nbNodes - 1;
	while(nbNodesRestants > 0) {

		for(var i = 0; i < nbNodes; i++) {

			//if ()

		}
		nbNodesRestants--;

	}

	/*
	// On génère les neuds
	for (var i = 0; i < nbNodes; i++) {
		this.g.nodes[i] = {
			data: {
				id: '' + i
			}
		};
	}

	// On les parcours afin de les lier
	for (var i = 0; i < this.g.nodes.length; i++) {
		console.log(this.g.nodes[i]);
	}
	*/
};

Graphe.prototype = {

	toString: function() {
		return this.g.toString();
	},

	toJSON: function() {

		return {
			nodes: [
				{ data: { id: '1' } },
				{ data: { id: '2' } },
				{ data: { id: '3' } },
				{ data: { id: '4' } },
				{ data: { id: '5' } },
				{ data: { id: '6' } },
				{ data: { id: '7' } },
				{ data: { id: '8' } },
				{ data: { id: '9' } },
				{ data: { id: '0' } }
			],

			edges: [
				{ data: { id: '01', weight: 3, source: '0', target: '1' } },
				{ data: { id: '02', weight: 5, source: '0', target: '2' } },
				{ data: { id: '03', weight: 2, source: '0', target: '3' } },
				{ data: { id: '04', weight: 6, source: '0', target: '4' } },
				{ data: { id: '05', weight: 1, source: '0', target: '5' } },
				{ data: { id: '06', weight: 1, source: '0', target: '6' } },
				{ data: { id: '07', weight: 8, source: '0', target: '7' } },
				{ data: { id: '18', weight: 4, source: '1', target: '8' } },
				{ data: { id: '19', weight: 9, source: '1', target: '9' } }
			]
		};
	}
};

module.exports = Graphe;
